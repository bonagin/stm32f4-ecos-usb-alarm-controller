/*
 * sess_perfomer.cc
 *
 *  Created on: 13 Jul 2015
 *      Author: root
 */

#include <cyg/kernel/diag.h>
#include <stdio.h>
#include <stdlib.h>

#include "utils.h"
#include "version.h"
#include "led.h"
#include "session.h"

//#define USB_SESS_GETVERSION 0x01
//#define USB_SESS_TRANSFER_BIN 0x02

//__externC void hal_sam4s_watchdog_restart();

cTestjig * cTestjig::__instance = 0;

cyg_uint32 serial_ = 0x87654321;

void cTestjig::init()
{
	if(!__instance)
	{
		__instance = new cTestjig();
	}
}

cTestjig::cTestjig()
{
	mSession = 0;
}

cyg_bool cTestjig::run()
{
	if(mSession)
	{
		if(mSession->execute())
			diag_printf(GREEN("cTestjig: Session success\n"));
		else
			diag_printf(RED("cTestjig: Session failed\n"));


		delete mSession;
		mSession = 0;
	}

	cyg_thread_delay(10);

	return true;
}

cyg_bool cTestjig::performSession(cSession * session)
{
	if(!__instance)
		return false;

	if(__instance->mSession)
		return false;

	__instance->mSession = session;

	return true;
}

void cTestjig::set_serial(cyg_uint32 serial)
{
	cyg_uint8 serial_data[4];

	serial_data[0] = serial>>24;
	serial_data[1] = serial>>16;
	serial_data[2] = serial>>8;
	serial_data[3] = serial;

    cSpiFlash::get()->write(0x0,serial_data);
}

cyg_uint32 cTestjig::get_serial()
{
	cyg_uint8 serial_data[4];
	cyg_flash_read(0x00,&serial_data, sizeof(serial_data), 0);
	serial_ = serial_data[0]<<24 | serial_data[1]<<16 | serial_data[2]<<8 | serial_data[3];
	return serial_;
}

void cTestjig::debug(cTerm & t,int argc,char *argv[])
{
  if(argc > 1)
  {
	cyg_uint32 serial  = (cyg_uint32)strtoul(argv[1],NULL,16);
	__instance->set_serial(serial);
	diag_printf("Device Serial Number : 0x%08X\n", __instance->get_serial());
  }
  else
  {
	  diag_printf("Device Serial Number : 0x%08X\n", __instance->get_serial());
  }
}


cTestjig::~cTestjig()
{

}


